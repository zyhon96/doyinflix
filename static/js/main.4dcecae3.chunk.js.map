{"version":3,"sources":["filmBox.jsx","Film.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["FilmBox","title","rating","year","runtimme","description","genres","torrents","download","imgUrl","size","className","src","alt","join","map","q","quality","p","u","i","href","url","Film","movies","movie","runtime","large_cover_image","description_full","mins","Header","setMovies","useState","search","setSearch","onSubmit","e","preventDefault","filteredMovies","filter","toLowerCase","includes","type","placeholder","onChange","s","target","value","App","useEffect","a","fetch","request","json","result","data","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dcecae3.chunk.js","sourcesContent":["import React from 'react'\nimport './Film.css';\n\nconst FilmBox = ({title, rating, year, runtimme,\n    description, genres, download, torrents,size, imgUrl\n   }) =>  {\n    return (\n            <div className=\"film-box\">\n                  <div className=\"div1\">\n                       <img src={imgUrl} alt=\"\" />\n                      </div> \n                      <div className=\"div2\">\n                    <h1>{title}</h1>\n                    <span>{runtimme} mins</span>\n                    <h3>Rating: <span>{rating ? rating : 'not available'}</span></h3>\n                    <span>Year Released: {year}</span>\n                    <h3>Description</h3>\n                    <p className=\"description\">{description ? description : 'not available'} </p>\n                   \n                    <h3>GENRE:</h3> <p>{genres.join(\", \")}</p>\n\n                        <span className=\"quality\">{torrents.map(q => q.quality).join(\", \")}</span> <br/>\n                        <span className=\"quality2\"> {torrents.map(p => p.size).join(\", \")}</span><br/>\n                        {torrents.map((u, i) => <button className=\"download\" > <a href={u.url}> {`Download Link ${i + 1}`} </a> </button> )}\n\n                      </div>\n                </div>\n    )\n}\n\nexport default FilmBox ;","import React from 'react'\nimport './index.css';\nimport FilmBox from '../src/filmBox'\nimport '../src/Film.css'\n\n\nfunction Film({movies}) {\n\n    return (\n        <div className=\"film\">\n            {movies.map(movie => {\n                const {runtime, title, large_cover_image: imgUrl, description_full: description, year , rating, genres, torrents} = movie;\n                return <FilmBox\n                    title={title}mins\n                    imgUrl={imgUrl}quality\n                    description={description}\n                    year={year}\n                    download=\"\"\n                    rating={rating}\n                    genres={genres}\n                    torrents={torrents}\n                    runtimme={runtime} \n                />\n            })}\n\n\n        </div>\n    )\n}\n\nexport default Film\n","import React, { useState } from 'react'\nimport './index.css'\nimport './Header.css'\nimport './Film'\n\nfunction Header({setMovies, movies}) {\n\n  const  [search, setSearch] = useState('');\n\nconst handleChange = e =>{\n    setSearch((s) => e.target.value)\n}\n\nconst handleSubmit = (e) => {\n    e.preventDefault()\n    const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(search.toLowerCase()))\n    setMovies(filteredMovies)\n\n\n}\n\n\n\n    return (\n        <div className=\"header\">\n           <div className=\"head\">\n\n            <div className=\"logo\">\n                <h1>DOYINFLIX</h1>\n            </div>\n            <div className=\"mid-head\">\n                \n                <h3 className=\"green\">Coming soon</h3>\n                <h3 className=\"red\">New Releases</h3>\n                <h3 className=\"yellow\">Office Box</h3>\n              \n            </div>\n            <div className=\"search-box\">\n                <form onSubmit={handleSubmit}>\n                <input type=\"search\" placeholder=\"Search Your Movies\"  onChange={handleChange}/>\n\n                </form>\n            </div>\n\n\n           </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css';\nimport Header from './Header';\nimport Film from './Film';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await fetch(\"https://yts.mx/api/v2/list_movies.json\");\n      const result = await request.json()\n      setMovies(result.data.movies)\n    }\n    fetchData()\n  }, [])\n\n\n  return (\n    <div className=\"app\">\n      <Header movies={movies} setMovies={setMovies} />\n      <Film movies = {movies}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}